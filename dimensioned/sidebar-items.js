initSidebarItems({"enum":[["Z0","The type-level signed integer 0."]],"macro":[["count_args!","Counts the number of arguments its called with and gives you the total."],["dim_impl_binary!","Used for implementing binary members of `V` for `Dim<D, V>`."],["dim_impl_unary!","Used for implementing unary members of `V` for `Dim<D, V>`"],["make_units!","Create a unit system."],["make_units_adv!","Create a unit system with more flexibility than `make_units!()`."]],"mod":[["dimensioned","This module allows dimensioned to be very flexible. It creates the `Dim<D, V>` type, which is the type that will be used for all dimensioned objects. It then implements as many traits from `std` as generically as possible."],["unit_systems",""]],"trait":[["Integer","The **marker trait** for compile time signed integers."],["Same","A **type operator** that ensures that `Rhs` is the same as `Self`, it is mainly useful for writing macros that can take arbitrary binary or unary operators."]],"type":[["N1",""],["N2",""],["N3",""],["N4",""],["N5",""],["N6",""],["N7",""],["N8",""],["N9",""],["P1",""],["P2",""],["P3",""],["P4",""],["P5",""],["P6",""],["P7",""],["P8",""],["P9",""]]});